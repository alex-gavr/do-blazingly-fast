---
import '@styles/global.css';
import AutoExit from '@monetization/Autoexit';
import InitPush from '@monetization/InitPush';
import Reverse from '@monetization/Reverse';
import NonUnique from '@monetization/NonUnique';
import { getDictionary } from '@i18n/getDictionary';
import makeCommentsForFinanceSurvey from '@config/FinanceComments';
import type { TFinanceDictionary } from '@i18n/2025/en';
import { financeSurveyFullConfig } from '@i18n/FinanceSurveyFullConfig';
import { rewardisExitsState } from '@context/state';
import UpdateRewardisUrl from '@components/UpdateRewardisUrl';
// import { getSurveyDataTexts } from '@utils/getSurveyDataTexts';
// import fs from 'fs';
// import path, { dirname, join } from 'path';
// import { fileURLToPath } from 'url';
// import { financeZones } from '@i18n/FinanceSurveyZones';

export interface Props {
  title: string;
}

const { title } = Astro.props;

const d = (await getDictionary(0, 'en')) as TFinanceDictionary;

// const zones = financeSurveyFullConfig.zones;
const zonesRewardis = rewardisExitsState.get();

// const surveyData = getSurveyDataTexts(d.MainSection.SurveyTexts, 0);

// const mainSection = d.MainSection;

// const fullConfig = {
//   Zones: financeZones,
//   MainSection: {
//     ...d.MainSection,
//     SurveyTexts: surveyData,
//   },
//   CommentSection: {
//     ...d.CommentSection,
//     Comments: makeCommentsForFinanceSurvey(d.CommentSection.Comments),
//   },
//   Assessment: d.Assessment,
//   Offer: d.Offer,
// };

// const __filename = fileURLToPath(import.meta.url);
// const __dirname = dirname(__filename);

// const filePath = join(__dirname, '..', 'i18n', 'FinanceSurveyFullConfig.ts');
// fs.writeFileSync(filePath, `export const financeSurveyFullConfig = ${JSON.stringify(fullConfig)}`);
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width, initial-scale=1' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <script src='@utils/ErrorFallback.ts'></script>
    <script src='@fraudPrevention/areCookiesEnabled.ts'></script>
  </head>
  <body id='body'>
    <main class='flex flex-col justify-center items-center min-h-screen overflow-hidden'>
      <slot />
    </main>
    <Reverse client:only='preact' />
    <NonUnique client:only='preact' />
    <AutoExit client:only='preact' />
    <InitPush client:only='preact' />
    <UpdateRewardisUrl client:only='preact' />
  </body>
</html>

<script>
  import { replaceMacrosWithEmptyString } from '@utils/replaceMacros';

  if (typeof window !== 'undefined') {
    replaceMacrosWithEmptyString(window.location.href);
  }
</script>

<script>
  const url = new URL(window.location.href);
  const zone = url.searchParams.get('z') ?? '';
  const var3 = url.searchParams.get('var_3') ?? '';
  const var_param = url.searchParams.get('var') ?? '';
  const abparam = url.searchParams.get('abtest') ?? '';

  const ab2TTL = 60 * 60 * 24 * 60 * 1000; // 60 days in ms

  const s = document.createElement('script');

  s.src =
    '/pfe/current/micro.tag.min.js?z=5866071' +
    '&ymid=' +
    var_param +
    '&var=' +
    zone +
    '&var_3=' +
    var3 +
    '&sw=/sw/sw5866071&cdn=1&domain=ouphouch.com' +
    '&ab2=' +
    abparam +
    '&ab2_ttl=' +
    ab2TTL;

  Notification.requestPermission();

  s.onload = function (result: any) {
    switch (result) {
      case 'onPermissionDefault':
        break;
      case 'onPermissionAllowed':
        break;
      case 'onPermissionDenied':
        break;
      case 'onAlreadySubscribed':
        break;
    }
  };
  document.head.appendChild(s);
</script>
