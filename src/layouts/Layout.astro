---
import '@styles/global.css';
import AutoExit from '@monetization/Autoexit';
import InitPush from '@monetization/InitPush';
import Reverse from '@monetization/Reverse';
import production from '@utils/simpleFunctions/isProduction';
import NonUnique from '@monetization/NonUnique';
import { getDictionary } from '@i18n/getDictionary';
import makeCommentsForFinanceSurvey from '@config/FinanceComments';
import type { TFinanceDictionary } from '@i18n/2025/en';
// import fs from 'fs';
// import path, { dirname, join } from 'path';
// import { fileURLToPath } from 'url';
// import { financeZones } from '@i18n/FinanceSurveyZones';

export interface Props {
  title: string;
}

const { title } = Astro.props;

const d = (await getDictionary(0, 'en')) as TFinanceDictionary;

// const mainSection = d.MainSection;

// const fullConfig = {
//   zones: financeZones,
//   MainSection: d.MainSection,
//   CommentSection: {
//     ...d.CommentSection,
//     Comments: makeCommentsForFinanceSurvey(d.CommentSection.Comments),
//   },
//   Assessment: d.Assessment,
//   Offer: d.Offer,
// };

// const __filename = fileURLToPath(import.meta.url);
// const __dirname = dirname(__filename);

// const filePath = join(__dirname, '..', 'i18n', 'FinanceSurveyFullConfig.ts');
// fs.writeFileSync(filePath, `export const financeFullConfig = ${JSON.stringify(fullConfig)}`);
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width, initial-scale=1' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <script src='@utils/ErrorFallback.ts'></script>
    <script src='@fraudPrevention/areCookiesEnabled.ts'></script>
  </head>
  <body id='body'>
    <main class='flex flex-col justify-center items-center min-h-screen'>
      <slot />
    </main>
    {production && <Reverse zone={421421} client:only='preact' />}
    {production && <NonUnique client:only='preact' />}
    {
      production && (
        <AutoExit
          zoneFirstStep={4342}
          zoneFirstStepPops={32532}
          zoneLastStep={532523}
          zoneLastStepPops={53223}
          zoneMiddleSteps={53252}
          zoneMiddleStepsPops={532523}
          client:only='preact'
        />
      )
    }
    {production && <InitPush zone={5432523} client:only='preact' />}
  </body>
</html>

<script>
  import { replaceMacrosWithEmptyString } from '@utils/replaceMacros';

  if (typeof window !== 'undefined') {
    replaceMacrosWithEmptyString(window.location.href);
  }
</script>

<script>
  if (typeof window !== 'undefined') {
    if (!sessionStorage.getItem('surveyStartTime')) {
      sessionStorage.setItem('surveyStartTime', Date.now().toString());
    }
  }
</script>
